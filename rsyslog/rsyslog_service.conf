# rsyslog configuration file

# For more information see /usr/share/doc/rsyslog-*/rsyslog_conf.html
# If you experience problems, see http://www.rsyslog.com/doc/troubleshoot.html


# this template is used to generate JSON output for elasticsearch (just in case)
# from a lead dev of rsyslog
# (https://rainer.gerhards.net/2018/02/simplifying-rsyslog-json-generation.html)

template(name="outfmt" type="list" option.jsonf="on") {
         property(outname="@timestamp"
                  name="timereported" 
                  dateFormat="rfc3339" format="jsonf")
         property(outname="host"
                  name="hostname" format="jsonf")
         property(outname="severity"
                  name="syslogseverity-text" caseConversion="upper" format="jsonf")
         property(outname="facility"
                  name="syslogfacility-text" format="jsonf")
         property(outname="syslog-tag"
                  name="syslogtag" format="jsonf")
         property(outname="source"
                  name="app-name" format="jsonf")
         property(outname="message"
                  name="msg" format="jsonf")
     }

#### MODULES ####

# The imjournal module below is now used as a message source instead of imuxsock.

# provides support for local system logging (e.g. via logger command)
$ModLoad imuxsock 

# provides access to the systemd journal
$ModLoad imjournal 

#$ModLoad imklog # reads kernel messages (the same are read from journald)
#$ModLoad immark  # provides --MARK-- message capability

# Provides UDP syslog reception
#$ModLoad imudp
#$UDPServerRun 514

# Provides TCP syslog reception
#$ModLoad imtcp
#$InputTCPServerRun 514

#### GLOBAL DIRECTIVES ####

# Where to place auxiliary files
$WorkDirectory /var/lib/rsyslog

# Use default timestamp format
$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat

# File syncing capability is disabled by default. This feature is usually not required,
# not useful and an extreme performance hit
#$ActionFileEnableSync on

# Include all config files in /etc/rsyslog.d/
$IncludeConfig /etc/rsyslog.d/*.conf

# Turn off message reception via local log socket;
# local messages are retrieved through imjournal now.
$OmitLocalLogging on

# File to store the position in the journal
$IMJournalStateFile imjournal.state


#### RULES ####

### ADDED because it seems better ###

# Log anything that is an avenger level threat.
*.panic /var/cluster/logs/$HOSTNAME%/panic.log

# Log alert 
*.alert /var/cluster/logs/$HOSTNAME%/alert.log

# Log critical
*.crit /var/cluster/logs/$HOSTNAME%/critical.log

# Log anything else
*.debug /var/cluster/logs/$HOSTNAME%/messages.log

### DEFAULT (just changed log to cluster) ###
## there will be supervision, so we can put everything in different folder
## the admin will already know what to look for

# The authpriv file has restricted access.
authpriv.*      /var/cluster/logs/$HOSTNAME%/secure

# Log all the mail messages in one place.
mail.*          -/var/cluster/logs/$HOSTNAME%/maillog

# Log cron stuff
cron.*          /var/cluster/logs/$HOSTNAME%/cron

# Save news errors of level crit and higher in a special file.
uucp,news.crit  /var/cluster/logs/$HOSTNAME%/spooler

# Save boot messages also to boot.log
local7.*        /var/cluster/logs/$HOSTNAME%/boot.log

#### JOURNAL ####

*.* /var/cluster/logs/%HOSTNAME%/messages


#### CONMAN ####

if $programname == 'conmand' then {
    action(type="omfile" file="/var/cluster/logs/%HOSTNAME%/conman.log")
}

# ### begin forwarding rule ###
# The statement between the begin ... end define a SINGLE forwarding
# rule. They belong together, do NOT split them. If you create multiple
# forwarding rules, duplicate the whole block!
# Remote Logging (we use TCP for reliable delivery)
#
# An on-disk queue is created for this action. If the remote host is
# down, messages are spooled to disk and sent when it is up again.
#$ActionQueueFileName fwdRule1 # unique name prefix for spool files
#$ActionQueueMaxDiskSpace 1g   # 1gb space limit (use as much as possible)
#$ActionQueueSaveOnShutdown on # save messages to disk on shutdown
#$ActionQueueType LinkedList   # run asynchronously
#$ActionResumeRetryCount -1    # infinite retries if host is down
# remote host is: name/ip:port, e.g. 192.168.0.1:514, port optional
#*.* @@remote-host:514
# ### end of the forwarding rule ###
